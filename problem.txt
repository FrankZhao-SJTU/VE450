问题在于：
pyQt处理数据的能力跟不上数据产生的能力，arduino采样的速率太快了，很多数据传入串口，但是对于pyQt,虽然我们要求更新频率为1ms
或者1us，但是实际上，可能处理的时间会更长，这样导致了数据在串口堆积，然后更新动画使用的数据是过去的数据，所以导致了异常。
修改方法有
1）减少arduino的采样速率，减缓数据的生成
2）加快pyQt的处理速率

对于1），根据实验，我们得到了频率大概在12,14Hz,根据奈奎斯特采样定律，我们只要将采样率控制在30Hz就可以，但是人眼如果需要流畅
看到distance的变化，大约需要60Hz,我调整了Arduino的采样率从200Hz（不行），100Hz（不行），现在调整为50Hz
对于2），计算FFT会消耗较多的时间，所以我考虑实时显示distance的变化，但是对于FFT的计算和更新，获取3个新的distance后（可以调
整），再进行，经过测试，这样可以保证数据积压基本为0,distance流畅显示，但是FFT的显示略有卡顿，我也想过，是否可以暂时不计算和显
示FFT的图像，等最后集中计算，但是还是计算一下，可以更加形象的显示频率的变化(看你们的意见)

此外，实验中发现，偶尔会出现噪声或者错误的数据，导致distance出现异常，所以我加上了判断代码来去除错误的distance数据（判断的
方法较为潦草，但是目前可以使用）